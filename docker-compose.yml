version: "3"

services:
  server_mongo:
    image: mongo:4.4.2
    container_name: server_mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongoData:/data/db
    networks:
      - api-network

  server_redis:
    image: redis:6.0.9
    container_name: server_redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - api-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: notes-api-python
    container_name: server-api-python
    restart: unless-stopped
    env_file: .env
    depends_on:
      - server_mongo
      - server_redis
    links:
      - "server_mongo"
      - "server_redis"
    ports:
      - ${FLASK_PORT}:${FLASK_PORT}
    volumes:
      - .:/api
    networks:
      - api-network
    environment:
      - CELERY_RESULT_BACKEND=redis://server_redis:6379/1
      - CELERY_BROKER_URL=redis://server_redis:6379/1
      - MONGO_HOST=server_mongo
      - MONGO_PORT=27017
      - MONGO_DB_NAME=notes
      - REDIS_HOST=server_redis
      - REDIS_PORT=6379
      - REDIS_EXPIRATION=60
      - WAIT_HOSTS:server_mongo:27017,server_redis:6379
      - WAIT_HOSTS_TIMEOUT:300
      - WAIT_SLEEP_INTERVAL:30
      - WAIT_HOST_CONNECT_TIMEOUT:30

  worker:
    build:
      context: .
    container_name: worker
    command: celery -A main.celery worker -l info -c 1 -Q default,high_priority
    depends_on:
      - server_redis
      - api
    links:
      - "server_redis"
    restart: unless-stopped
    networks:
      - api-network
    environment:
      - CELERY_RESULT_BACKEND=redis://server_redis:6379/1
      - CELERY_BROKER_URL=redis://server_redis:6379/1

networks:
  api-network:
    name: api-network
    driver: bridge

volumes:
  mongoData:
